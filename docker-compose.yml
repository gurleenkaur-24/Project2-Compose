# docker-compose.yml
# Goal: Run Jenkins with a secure Docker-in-Docker (DinD) service.
# Named volumes persist Jenkins home and Docker image cache across restarts.

# Private network for Jenkins and DinD
networks:
  jenkins: {}

# Named volumes (persist even if containers stop/restart)
volumes:
  jenkins-data: {}          # Jenkins home (jobs, plugins, config)
  docker-certs-ca: {}       # TLS CA certificates (server/CA)
  docker-certs-client: {}   # TLS client certificates (for Jenkins)
  docker-data: {}           # Docker image layers & build cache (DinD)

services:
  # Docker engine in a container (DinD = Docker-in-Docker)
  dind:
    image: docker:24-dind
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs       # Enable TLS for secure communication
    networks:
      jenkins:
        aliases:
          - docker                      # Jenkins reaches DinD as "docker"
    volumes:
      - docker-certs-ca:/certs/ca
      - docker-certs-client:/certs/client
      - docker-data:/var/lib/docker     # Persist Docker images/layers/cache
    restart: unless-stopped

  # Jenkins controller
  jenkins:
    image: jenkins/jenkins:lts-jdk11    # Stable Jenkins with Java 11
    user: root
    environment:
      - DOCKER_HOST=tcp://docker:2376     # Address of the DinD service
      - DOCKER_CERT_PATH=/certs/client    # Path to TLS client certs
      - DOCKER_TLS_VERIFY=1               # Enforce secure TLS verification
    ports:
      - "8080:8080"                       # Jenkins web UI
      - "50000:50000"                     # Jenkins agent communication
    volumes:
      - jenkins-data:/var/jenkins_home        # Persist Jenkins data
      - docker-certs-client:/certs/client:ro  # Read-only TLS client certs
      - /usr/bin/docker:/usr/bin/docker       # Optional: docker CLI in Jenkins
    networks:
      - jenkins
    restart: unless-stopped
