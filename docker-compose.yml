
version: "3.9"

services:
  dind:
    image: docker:27-dind
    container_name: dind
    privileged: true                    # DinD requires privileged to run dockerd
    environment:
      - DOCKER_TLS_CERTDIR=/certs       # Enable TLS; certs auto-generated by dockerd
    command: [
      "--host=tcp://0.0.0.0:2376",
      "--host=unix:///var/run/docker.sock",
      "--storage-driver=overlay2"
    ]
    ports:
      - "2376:2376"                     # Expose TLS-secured Docker API
    volumes:
      - docker_certs:/certs             # Shared TLS certs (server+client)
      - docker_data:/var/lib/docker     # Docker layer/cache data
    healthcheck:
      test: ["CMD", "sh", "-c", "apk add --no-cache docker-cli >/dev/null 2>&1 || true; docker --host=tcp://localhost:2376 --tlsverify --tlscacert=/certs/server/ca.pem version"]
      interval: 20s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - jenkins_net

  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    depends_on:
      dind:
        condition: service_healthy
    environment:
      - DOCKER_HOST=tcp://dind:2376     # Point Jenkins to remote DinD
      - DOCKER_TLS_VERIFY=1
      - DOCKER_CERT_PATH=/certs/client  # Client certs mounted read-only
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    ports:
      - "8080:8080"                     # Jenkins UI
      - "50000:50000"                   # Inbound agents
    volumes:
      - jenkins_home:/var/jenkins_home  # Persist Jenkins data
      - docker_certs:/certs/client:ro   # Client certs generated by DinD
    restart: unless-stopped
    user: "0"                           # Ensures Jenkins can read mounted certs
    networks:
      - jenkins_net

volumes:
  jenkins_home:
  docker_data:
  docker_certs:

networks:
  jenkins_net:
    driver: bridge
